{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Dialogue Time API",
    "description": "Documentation automatically generated by the <b>swagger-autogen</b> module."
  },
  "host": "https://api.dialogueone.com",
  "basePath": "/api/",
  "tags": [
    {
      "name": "Authorize",
      "description": "Endpoints for exchanging MS graph Bearer token, retrieved from Single Sign On, for JWT token for use in each API endpoint."
    },
    {
      "name": "Emply intergration",
      "description": "Endpoints for Emply Api's intergration"
    },
    {
      "name": "Hours",
      "description": "Endpoints for hours records."
    },
    {
      "name": "Schedule",
      "description": "Endpoints for schedule records"
    },
    {
      "name": "Salary",
      "description": "Endpoints for salary periods"
    },
    {
      "name": "Ledger",
      "description": "Endpoints for ledger records"
    },
    {
      "name": "Photos",
      "description": "Endpoints for user profile photo records"
    },
    {
      "name": "Locations",
      "description": "Endpoints for location records"
    },
    {
      "name": "Projects",
      "description": "Endpoints for projects"
    },
    {
      "name": "Tasks",
      "description": "Endpoints for tasks records"
    },
    {
      "name": "Teams",
      "description": "Endpoints for teams records"
    },
    {
      "name": "Supplements",
      "description": "Endpoints for supplements records"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "x-access-token",
      "in": "header"
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/auth/signin": {
      "post": {
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/Emply/depertments": {
      "get": {
        "tags": [
          "Emply intergration"
        ],
        "description": "Endpoint para obter um usuário.",
        "parameters": [],
        "responses": {}
      }
    },
    "/Emply/employee/{email}": {
      "get": {
        "tags": [
          "Emply intergration"
        ],
        "description": "Endpoint para obter um usuário.",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/Emply/employee/{EmplyUUID}/contactData": {
      "get": {
        "tags": [
          "Emply intergration"
        ],
        "description": "Endpoint para obter um usuário.",
        "parameters": [
          {
            "name": "EmplyUUID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/Emply/employee/{EmplyUUID}/masterData": {
      "get": {
        "tags": [
          "Emply intergration"
        ],
        "description": "Endpoint para obter um usuário.",
        "parameters": [
          {
            "name": "EmplyUUID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {}
      },
      "put": {
        "tags": [
          "Emply intergration"
        ],
        "description": "Endpoint para obter um usuário.",
        "parameters": [
          {
            "name": "EmplyUUID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/Emply/employees": {
      "get": {
        "tags": [
          "Emply intergration"
        ],
        "description": "Endpoint para obter um usuário.",
        "parameters": [],
        "responses": {}
      }
    },
    "/Emply/user/UserUUID/{UserUUID}": {
      "get": {
        "tags": [
          "Emply intergration"
        ],
        "description": "Endpoint para obter um usuário.",
        "parameters": [
          {
            "name": "UserUUID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/Emply/users": {
      "get": {
        "tags": [
          "Emply intergration"
        ],
        "description": "Endpoint para obter um usuário.",
        "parameters": [],
        "responses": {}
      }
    },
    "/Authorize/bearer/{bearer}/oid/{oid}": {
      "get": {
        "tags": [
          "Authorize"
        ],
        "description": "Endpoint para obter um usuário.",
        "parameters": [
          {
            "name": "bearer",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "oid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "api_sectet",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/Hours": {
      "get": {
        "tags": [
          "Hours"
        ],
        "description": "Retrieves every hours records",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Hours"
        ],
        "description": "Creates an entry of hours and saves it as a double transactional data in Ledger table and one row as meta data in Hours",
        "parameters": [
          {
            "name": "msbearertoken",
            "in": "header",
            "type": "string"
          },
          {
            "name": "useruuid",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "User": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/Hours/{id}": {
      "get": {
        "tags": [
          "Hours"
        ],
        "description": "Retrieves a single hour record with id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Hours"
        ],
        "description": "Updates a single hour record with an ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "User": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Hours"
        ],
        "description": "Deletes a single hour record with an ID (will be depricated)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/Hours/delete/bulk": {
      "delete": {
        "tags": [
          "Hours"
        ],
        "description": "Deletes a single hour record with an ID (will be depricated)",
        "parameters": [
          {
            "name": "useruuid",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/Hours/start/{start}/end/{end}": {
      "get": {
        "tags": [
          "Hours"
        ],
        "description": "Retrieves every hour record logged for a single day (not created at day)",
        "parameters": [
          {
            "name": "start",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "end",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/Hours/project/{project}/start/{start}/end/{end}/sum/hours": {
      "get": {
        "tags": [
          "Hours"
        ],
        "description": "Deletes a single hour record with an ID (will be depricated)",
        "parameters": [
          {
            "name": "project",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "start",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "end",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/Hours/user/{UserUUID}/start/{start}/end/{end}": {
      "get": {
        "tags": [
          "Hours"
        ],
        "description": "Retrieves hour records for users in between two dates",
        "parameters": [
          {
            "name": "UserUUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "start",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "end",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/Hours/user/{UserUUID}/period/{period}": {
      "get": {
        "tags": [
          "Hours"
        ],
        "description": "Retrieves hour records for users in between two dates",
        "parameters": [
          {
            "name": "UserUUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/Hours/user/{UserUUID}/start/{start}/end/{end}/sum/hours": {
      "get": {
        "tags": [
          "Hours"
        ],
        "description": "Sums hours for a user between two dates",
        "parameters": [
          {
            "name": "UserUUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "start",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "end",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/Hours/user/{UserUUID}/start/{start}/end/{end}/sum/meetings": {
      "get": {
        "tags": [
          "Hours"
        ],
        "description": "Sums up meetings booked by a user between two dates.",
        "parameters": [
          {
            "name": "UserUUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "start",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "end",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/Hours/user/{UserUUID}/start/{start}/end/{end}/avg/contacts": {
      "get": {
        "tags": [
          "Hours"
        ],
        "description": "Retrieves avarage contacts for a user between two dates",
        "parameters": [
          {
            "name": "UserUUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "start",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "end",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/Ledger/user/{UserUUID}/period/{id}": {
      "get": {
        "tags": [
          "Ledger"
        ],
        "description": "Retrieve all ledger items for user",
        "parameters": [
          {
            "name": "UserUUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/Ledger/user/{UserUUID}/period/{id}/net": {
      "get": {
        "tags": [
          "Ledger"
        ],
        "description": "Endpoint para obter um usuário.",
        "parameters": [
          {
            "name": "UserUUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/Ledger/user/{UserUUID}/period/{id}/debit": {
      "get": {
        "tags": [
          "Ledger"
        ],
        "description": "Endpoint para obter um usuário.",
        "parameters": [
          {
            "name": "UserUUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/Ledger/user/{UserUUID}/period/{id}/credit": {
      "get": {
        "tags": [
          "Ledger"
        ],
        "description": "Endpoint para obter um usuário.",
        "parameters": [
          {
            "name": "UserUUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/Ledger": {
      "post": {
        "tags": [
          "Ledger"
        ],
        "description": "Creates a double transactional ledger records for one user. A debit record for the salary-period the user wishes to deffer hours from and a credit record for the salary-period the user wishes to defer hours to.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "debit_month_name": {
                  "example": "any"
                },
                "credit_month_name": {
                  "example": "any"
                },
                "Hours": {
                  "example": "any"
                },
                "Supplement": {
                  "example": "any"
                },
                "User_UUID": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/Locations": {
      "post": {
        "tags": [
          "Locations"
        ],
        "description": "Endpoint para obter um usuário.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "day": {
                  "example": "any"
                },
                "Date_start_time": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": [
          "Locations"
        ],
        "description": "Endpoint para obter um usuário.",
        "parameters": [
          {
            "name": "title",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/Locations/{id}": {
      "get": {
        "tags": [
          "Locations"
        ],
        "description": "Endpoint para obter um usuário.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Locations"
        ],
        "description": "Endpoint para obter um usuário.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Locations"
        ],
        "description": "Endpoint para obter um usuário.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/Logs": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/Logs/user/{UserUUID}/limit/{limit}": {
      "get": {
        "tags": [
          "Hours"
        ],
        "description": "Retrieves hour records for users in between two dates",
        "parameters": [
          {
            "name": "UserUUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/Photo": {
      "post": {
        "tags": [
          "Photos"
        ],
        "description": "Endpoint para obter um usuário.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                },
                "base64ImgData": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/Photo/user/{UserUUID}": {
      "get": {
        "tags": [
          "Photos"
        ],
        "description": "Endpoint para obter um usuário.",
        "parameters": [
          {
            "name": "UserUUID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "tags": [
          "Photos"
        ],
        "description": "Endpoint para obter um usuário.",
        "parameters": [
          {
            "name": "UserUUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "photo_data": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/Project": {
      "post": {
        "tags": [
          "Projects"
        ],
        "description": "Creates a single record of a project",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "Projects": {
                  "example": "any"
                },
                "Management": {
                  "example": "any"
                },
                "Germany": {
                  "example": "any"
                },
                "Denmark": {
                  "example": "any"
                },
                "Tryg": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": [
          "Projects"
        ],
        "description": "Retrieves all records of projects",
        "parameters": [
          {
            "name": "title",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/Project/{id}": {
      "get": {
        "tags": [
          "Projects"
        ],
        "description": "Retrieves single record using an ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Projects"
        ],
        "description": "Updates a single project using an ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Projects"
        ],
        "description": "Deletes a project using an ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/Project/team/{id}": {
      "get": {
        "tags": [
          "Projects"
        ],
        "description": "Fix this logic with department id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/Salary/period/between/{date}/user/{UserUUID}/sum/hours": {
      "get": {
        "tags": [
          "Salary"
        ],
        "description": "Retrieves all ledger items for a user",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "UserUUID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/Salary/period/current": {
      "get": {
        "tags": [
          "Salary"
        ],
        "description": "Finds current period using the date of the server",
        "parameters": [],
        "responses": {}
      }
    },
    "/Salary/period/month/{date}": {
      "get": {
        "tags": [
          "Salary"
        ],
        "description": "Retrieves a period in which a day falls in between the start and end of the period.",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/Salary/period/date/{date}": {
      "get": {
        "tags": [
          "Salary"
        ],
        "description": "Retrieves all ledger items for a user",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/Salary/periods/year/{date}": {
      "get": {
        "tags": [
          "Salary"
        ],
        "description": "Finds all periods of a year, using a date.",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "title",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/Salary/periods/year/{date}/name": {
      "get": {
        "tags": [
          "Salary"
        ],
        "description": "Finds all periods of a year, using a date.",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "title",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/Salary/export/period/{id}": {
      "get": {
        "tags": [
          "Salary"
        ],
        "description": "Retrieves all ledger items for a user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/Salary/period": {
      "post": {
        "tags": [
          "Salary"
        ],
        "description": "Creates a record of a salary period",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "Month_name": {
                  "example": "any"
                },
                "Date_start": {
                  "example": "any"
                },
                "Date_end": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/Salary/period/{id}": {
      "put": {
        "tags": [
          "Salary"
        ],
        "description": "Updates a single record of a salary period using an ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Salary"
        ],
        "description": "Deletes a single record of a salary period",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/Schedule": {
      "get": {
        "tags": [
          "Schedule"
        ],
        "description": "Retrieves all schedule records",
        "parameters": [
          {
            "name": "title",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Schedule"
        ],
        "description": "Creates a schedule record",
        "parameters": [
          {
            "name": "useruuid",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "Date_start_time": {
                  "example": "any"
                },
                "Date_end_time": {
                  "example": "any"
                },
                "Hours": {
                  "example": "any"
                },
                "Email": {
                  "example": "any"
                },
                "User": {
                  "example": "any"
                },
                "Team": {
                  "example": "any"
                },
                "Location": {
                  "example": "any"
                },
                "User_UUID": {
                  "example": "any"
                },
                "Table_number": {
                  "example": "any"
                },
                "Break": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/Schedule/{id}": {
      "put": {
        "tags": [
          "Schedule"
        ],
        "description": "Updates a schedule record using an ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Schedule"
        ],
        "description": "Deletes a schedule record using an ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "useruuid",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": [
          "Schedule"
        ],
        "description": "Retrieves a schedule record with an ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/Schedule/import": {
      "post": {
        "tags": [
          "Schedule"
        ],
        "description": "Accepts json for imports to schedule.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/Schedule/month/{date}/sum/hours": {
      "get": {
        "tags": [
          "Schedule"
        ],
        "description": "Retrieves the sum of hours scheduled for every user, for a while month, using date",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/Schedule/start/{start}/end/{end}": {
      "get": {
        "tags": [
          "Schedule"
        ],
        "description": "Retrieves all schedule records between two dates (not created at)",
        "parameters": [
          {
            "name": "start",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "end",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/Schedule/start/{start}/end/{end}/tables": {
      "get": {
        "tags": [
          "Schedule"
        ],
        "description": "Retrieves all schedule records between two dates that have a table booking",
        "parameters": [
          {
            "name": "start",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "end",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/Schedule/user/{UserUUID}/start/{start}/end/{end}": {
      "get": {
        "tags": [
          "Schedule"
        ],
        "description": "Retrieves all schedule records for a user in between two dates",
        "parameters": [
          {
            "name": "UserUUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "start",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "end",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/Schedule/user/{UserUUID}/start/{date}/end/{date}/ping": {
      "get": {
        "tags": [
          "Schedule"
        ],
        "description": "Check if user has shceduled a day in between two days",
        "parameters": [
          {
            "name": "UserUUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/Schedule/user/{UserUUID}/start/{date}/limit/{limit}/offset/{offset}": {
      "get": {
        "tags": [
          "Schedule"
        ],
        "description": "Retrieves all schedule records from one date with limit and offset",
        "parameters": [
          {
            "name": "UserUUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/Schedule/users/{[usernames]}/month/{date}/sum/hours": {
      "get": {
        "tags": [
          "Schedule"
        ],
        "description": "Retrieves the sum of hours scheduled for the month, using an array of usernames and a whatever date.",
        "parameters": [
          {
            "name": "[usernames]",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/Schedule/team/{id}/month/{date}": {
      "get": {
        "tags": [
          "Schedule"
        ],
        "description": "Retrieves all records from the schedule for a team, for a whole month, using the team id and a date.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/Schedule/team/{id}/month/{date}/sum/hours": {
      "get": {
        "tags": [
          "Schedule"
        ],
        "description": "Retrieves the sum og hours scheduled for a team, for a whole month, using the team id and a date.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/Supplements": {
      "get": {
        "tags": [
          "Supplements"
        ],
        "description": "Retrieves all records of supplements",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Supplements"
        ],
        "description": "Creates a record for supplements",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "day": {
                  "example": "any"
                },
                "Date_start_time": {
                  "example": "any"
                },
                "Date_end_time": {
                  "example": "any"
                },
                "Hours": {
                  "example": "any"
                },
                "Email": {
                  "example": "any"
                },
                "User": {
                  "example": "any"
                },
                "Team": {
                  "example": "any"
                },
                "Location": {
                  "example": "any"
                },
                "Table_number": {
                  "example": "any"
                },
                "Break": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/Supplements/{id}": {
      "get": {
        "tags": [
          "Supplements"
        ],
        "description": "Retrieves one record of supplements using an ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Supplements"
        ],
        "description": "Updates one record using an ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Supplements"
        ],
        "description": "Deletes one record using an ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/Task": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "description": "Retrieves all records of tasks",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Tasks"
        ],
        "description": "Creates a record of a task",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "Tasks": {
                  "example": "any"
                },
                "Management": {
                  "example": "any"
                },
                "Germany": {
                  "example": "any"
                },
                "Denmark": {
                  "example": "any"
                },
                "Tryg": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/Task/{id}": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "description": "Retrieves a single record using an ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Tasks"
        ],
        "description": "Updates a single task record using an ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Tasks"
        ],
        "description": "Deletes a single record using an ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/Task/team/{team}": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "description": "Retrieves all tasks belonging to a team",
        "parameters": [
          {
            "name": "team",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/Task/bulk/{id}": {
      "put": {
        "tags": [
          "Tasks"
        ],
        "description": "Updates a single task record using an ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "definitions": {
    "PostHours": {
      "type": "object",
      "properties": {
        "Date": {
          "type": "string",
          "example": "date"
        },
        "Week_number": {
          "type": "string",
          "example": "number"
        },
        "Hours": {
          "type": "string",
          "example": "number"
        },
        "Email": {
          "type": "string",
          "example": "string"
        },
        "User": {
          "type": "string",
          "example": "string"
        },
        "Location": {
          "type": "string",
          "example": "Locations foreign key | string"
        },
        "Project": {
          "type": "string",
          "example": "Projects foreign key | string"
        },
        "Task": {
          "type": "string",
          "example": "Tasks foreign key | string"
        },
        "Description": {
          "type": "string",
          "example": "string"
        },
        "Team": {
          "type": "string",
          "example": "Teams foreign key | string"
        },
        "Contacts": {
          "type": "string",
          "example": "number"
        },
        "Meetings": {
          "type": "string",
          "example": "number"
        },
        "User_UUID": {
          "type": "string",
          "example": "Microsoft Graph user id | string"
        },
        "Transaction_type": {
          "type": "string",
          "example": "Transaction_type foreign key | string"
        }
      },
      "required": [
        "Date",
        "Week_number",
        "Hours",
        "Email",
        "User",
        "Location",
        "Project",
        "Task",
        "Description",
        "Team",
        "Contacts",
        "Meetings",
        "User_UUID",
        "Transaction_type"
      ]
    }
  },
  "contact": {
    "name": "Ingimar Eyfjord Smarason",
    "url": "https://dialogueone.com",
    "email": "ies@dialogueone.com"
  }
}